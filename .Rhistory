ggplot(data= loch.long, aes(x= average_ch, y= value %>% stats::filter(value >-2500), color= site_ID))+
geom_point()+
facet_wrap(~algorithm)
ggplot(data= loch.long, aes(x= average_ch, y= value, color= site_ID))+
geom_point()+
facet_wrap(~algorithm)
ggplot(data= loch.long %>% filter(value > -2500), aes(x= average_ch, y= value, color= site_ID))+
geom_point()+
facet_wrap(~algorithm)
ggplot(data= loch.long %>% filter(value > -2500 & value < 200), aes(x= average_ch, y= value, color= site_ID))+
geom_point()+
facet_wrap(~algorithm)
ggplot(data= loch.long %>% filter(value > -2500 & value < 20), aes(x= average_ch, y= value, color= site_ID))+
geom_point()+
facet_wrap(~algorithm)
ggplot(data= loch.long %>% filter(value > -2 & value < 20), aes(x= average_ch, y= value, color= site_ID))+
geom_point()+
facet_wrap(~algorithm)
#these plots suck
#----------------------------
#Now, do same thing for sky pond
sky.sent.point <- algorithm_values_points_wide %>%
filter(site_ID=="Sky.WC"| site_ID=="Sky.O")
#use lapply to run correlations for 9:19 (algs) vs field chl
#assign x as field obs chl
x <- sky.sent.point$average_ch
lapply(sky.sent.point[9:19], cor.test, x=x, method= "spearman")
#plot
sky.long <- gather(sky.sent.point, key= "algorithm", values=c("brg", "ex", "fb", "g", "mci", "ndci", "ndi", "nir", "tb", "thrbda", "twbda"))
ggplot(data= sky.long, aes(x= average_ch, y= value, color= site_ID))+
geom_point()+
facet_wrap(~algorithm)
ggplot(data= sky.long %>% filter(value>-2500), aes(x= average_ch, y= value, color= site_ID))+
geom_point()+
facet_wrap(~algorithm)
sky <- lapply(sky.sent.point[9:19], cor.test, x=x, method= "spearman")
as.data.frame(sky)
View(sky)
data.frame(unlist(sky))
skydf<- data.frame(unlist(sky))
View(skydf)
skydf<- bind_rows(sky, .id = "column_label")
skydf<- bind_rows(sky, id = "column_label")
lapply(algorithm_values_points_wide[9:19], cor.test, x=algorithm_values_points_wide[,9:19], method= "spearman")
#script to correlate algorithms to eachother, Sentinel points
#load data and packages
algorithm_values_points_wide <- read_csv("Documents/GitHub/NASA_DEVELOP_CO19/Data/algorithm_values_points_wide.csv")
lapply(algorithm_values_points_wide[9:19], cor.test, x=algorithm_values_points_wide[,9:19], method= "spearman")
lapply(algorithm_values_points_wide[,9:19], cor.test, x=algorithm_values_points_wide[,9:19], method= "spearman")
lapply(algorithm_values_points_wide[,9:19], cor.test, x=i in algorithm_values_points_wide[,9:19], method= "spearman")
#need to loop through correlations so that each algorithm gets correlated with all the others
#for loop?
#or r cor test?
install.packages("ltm")
library(ltm)
#need data to be in matrix format for rcor.test
mat <- as.matrix(algorithm_values_points_wide[,9:19])
View(mat)
View(algorithm_values_points_wide)
#need data to be in matrix format for rcor.test
mat <- as.matrix(algorithm_values_points_wide[,11:21])
View(mat)
#mat <- matrix(rnorm(1000), 100, 10, dimnames = list(NULL, LETTERS[1:10]))
rcor.test(mat, method = "spearman")
warnings()
#mat <- matrix(rnorm(1000), 100, 10, dimnames = list(NULL, LETTERS[1:10]))
all.algs.corr <- rcor.test(mat, method = "spearman")
View(all.algs.corr)
all.algs.corr[["cor.mat"]]
all.algs.corr[["cor.mat"]]
as.data.frame(all.algs.corr[["cor.mat"]])
corr.mat <- as.data.frame(all.algs.corr[["cor.mat"]])
write_csv(corr.mat, "correlation_all_algs.csv")
View(corr.mat)
View(corr.mat)
View(all.algs.corr)
p.vals <- as.data.frame(all.algs.corr[["p.values"]])
View(p.vals)
all.algs.corr[["p.values"]]
write_csv(p.vals, "correlation_all_algs.csv")
write_csv(corr.mat, "correlation_all_algs.csv")
write_csv(p.vals, "pvals_all_algs.csv")
#----------
#Plot
#gather algorithms to plot with facet_wrap
sky.long <- gather(sky.sent.point, key= "algorithm", values=c("brg", "ex", "fb", "g", "mci", "ndci", "ndi", "nir", "tb", "thrbda", "twbda"))
View(algorithm_values_points_wide)
library(dataRetrieval)
#script to pull chl-a data from USGS
#
#load packages
{
library(tidyverse)
library(dataRetrieval)
}
#----------
#Assign sites, parameters, dates
{
siteNumber <- c("401733105392403", #THE LOCH HYPOLIMNION
"401733105392402", #THE LOCH METALIMNION
"401733105392401", #THE LOCH SURFACE
"401733105392404", #THE LOCH OUTLET
"401642105400600", #SKY POND INLET
"401642105400601" #SKY POND SURFACE
)
parameterCd <- "32209"  #Corrected chl-a, flourometer, ug/L
startDate <- ""
endDate <- ""
}
co_q <- readNWISdv(siteNumber, parameterCd, startDate, endDate)
endDate <- "2019-08-20"
View(co_q)
siteNumber <- c("401733105392403" #THE LOCH HYPOLIMNION
# "401733105392402", #THE LOCH METALIMNION
# "401733105392401", #THE LOCH SURFACE
# "401733105392404", #THE LOCH OUTLET
# "401642105400600", #SKY POND INLET
# "401642105400601" #SKY POND SURFACE
)
parameterCd <- "32209"  #Corrected chl-a, flourometer, ug/L
startDate <- ""
endDate <- "2019-08-20"
#----------
#Assign sites, parameters, dates
{
siteNumber <- c("401733105392403" #THE LOCH HYPOLIMNION
# "401733105392402", #THE LOCH METALIMNION
# "401733105392401", #THE LOCH SURFACE
# "401733105392404", #THE LOCH OUTLET
# "401642105400600", #SKY POND INLET
# "401642105400601" #SKY POND SURFACE
)
parameterCd <- "32209"  #Corrected chl-a, flourometer, ug/L
startDate <- ""
endDate <- "2019-08-20"
}
co_q <- readNWISdv(siteNumber, parameterCd, startDate, endDate)
co_q <- readNWISqw(siteNumber, parameterCd, startDate, endDate)
#----------
#Assign sites, parameters, dates
{
siteNumber <- c("401733105392403" #THE LOCH HYPOLIMNION
"401733105392402", #THE LOCH METALIMNION
"401733105392401", #THE LOCH SURFACE
"401733105392404", #THE LOCH OUTLET
"401642105400600", #SKY POND INLET
"401642105400601" #SKY POND SURFACE
)
parameterCd <- "32209"  #Corrected chl-a, flourometer, ug/L
startDate <- ""
endDate <- "2019-08-20"
}
#----------
#Assign sites, parameters, dates
{
siteNumber <- c("401733105392403", #THE LOCH HYPOLIMNION
"401733105392402", #THE LOCH METALIMNION
"401733105392401", #THE LOCH SURFACE
"401733105392404", #THE LOCH OUTLET
"401642105400600", #SKY POND INLET
"401642105400601" #SKY POND SURFACE
)
parameterCd <- "32209"  #Corrected chl-a, flourometer, ug/L
startDate <- ""
endDate <- "2019-08-20"
}
co_q <- readNWISqw(siteNumber, parameterCd, startDate, endDate)
View(co_q)
co_q <- co_q %>% renameNWISColumns(co_q)
inUrl1  <- "https://pasta.lternet.edu/package/data/eml/knb-lter-nwt/157/4/977f9b22dfca3da36f162c5d9f2ebc45"
infile1 <- tempfile()
download.file(inUrl1,infile1,method="curl")
dt1 <-read.csv(infile1,header=F
,skip=1
,sep=","
,quot='"'
, col.names=c(
"site",
"local_site",
"year",
"location",
"depth",
"date",
"time",
"chl_a",
"pH",
"temp",
"std_conduct",
"conduct",
"DO",
"sat",
"nitrate",
"secchi",
"PAR",
"flag",
"comments"    ), check.names=TRUE)
if (class(dt1$site)!="factor") dt1$site<- as.factor(dt1$site)
if (class(dt1$local_site)!="factor") dt1$local_site<- as.factor(dt1$local_site)
if (class(dt1$location)!="factor") dt1$location<- as.factor(dt1$location)
if (class(dt1$depth)=="factor") dt1$depth <-as.numeric(levels(dt1$depth))[as.integer(dt1$depth) ]
# attempting to convert dt1$date dateTime string to R date structure (date or POSIXct)
tmpDateFormat<-"%Y-%m-%d"
tmp1date<-as.Date(dt1$date,format=tmpDateFormat)
# Keep the new dates only if they all converted correctly
if(length(tmp1date) == length(tmp1date[!is.na(tmp1date)])){dt1$date <- tmp1date } else {print("Date conversion failed for dt1$date. Please inspect the data and do the date conversion yourself.")}
rm(tmpDateFormat,tmp1date)
if (class(dt1$chl_a)=="factor") dt1$chl_a <-as.numeric(levels(dt1$chl_a))[as.integer(dt1$chl_a) ]
if (class(dt1$pH)=="factor") dt1$pH <-as.numeric(levels(dt1$pH))[as.integer(dt1$pH) ]
if (class(dt1$temp)=="factor") dt1$temp <-as.numeric(levels(dt1$temp))[as.integer(dt1$temp) ]
if (class(dt1$std_conduct)=="factor") dt1$std_conduct <-as.numeric(levels(dt1$std_conduct))[as.integer(dt1$std_conduct) ]
if (class(dt1$conduct)=="factor") dt1$conduct <-as.numeric(levels(dt1$conduct))[as.integer(dt1$conduct) ]
if (class(dt1$DO)=="factor") dt1$DO <-as.numeric(levels(dt1$DO))[as.integer(dt1$DO) ]
if (class(dt1$sat)=="factor") dt1$sat <-as.numeric(levels(dt1$sat))[as.integer(dt1$sat) ]
if (class(dt1$nitrate)=="factor") dt1$nitrate <-as.numeric(levels(dt1$nitrate))[as.integer(dt1$nitrate) ]
if (class(dt1$secchi)=="factor") dt1$secchi <-as.numeric(levels(dt1$secchi))[as.integer(dt1$secchi) ]
if (class(dt1$PAR)=="factor") dt1$PAR <-as.numeric(levels(dt1$PAR))[as.integer(dt1$PAR) ]
if (class(dt1$flag)!="factor") dt1$flag<- as.factor(dt1$flag)
if (class(dt1$comments)!="factor") dt1$comments<- as.factor(dt1$comments)
dt1$site <- as.factor(ifelse((trimws(as.character(dt1$site))==trimws("NaN")),NA,as.character(dt1$site)))
dt1$location <- as.factor(ifelse((trimws(as.character(dt1$location))==trimws("NaN")),NA,as.character(dt1$location)))
dt1$depth <- ifelse((trimws(as.character(dt1$depth))==trimws("NaN")),NA,dt1$depth)
dt1$chl_a <- ifelse((trimws(as.character(dt1$chl_a))==trimws("NaN")),NA,dt1$chl_a)
dt1$pH <- ifelse((trimws(as.character(dt1$pH))==trimws("NaN")),NA,dt1$pH)
dt1$temp <- ifelse((trimws(as.character(dt1$temp))==trimws("NaN")),NA,dt1$temp)
dt1$std_conduct <- ifelse((trimws(as.character(dt1$std_conduct))==trimws("NaN")),NA,dt1$std_conduct)
dt1$conduct <- ifelse((trimws(as.character(dt1$conduct))==trimws("NaN")),NA,dt1$conduct)
dt1$DO <- ifelse((trimws(as.character(dt1$DO))==trimws("NaN")),NA,dt1$DO)
dt1$sat <- ifelse((trimws(as.character(dt1$sat))==trimws("NaN")),NA,dt1$sat)
dt1$nitrate <- ifelse((trimws(as.character(dt1$nitrate))==trimws("NaN")),NA,dt1$nitrate)
dt1$secchi <- ifelse((trimws(as.character(dt1$secchi))==trimws("NaN")),NA,dt1$secchi)
dt1$PAR <- ifelse((trimws(as.character(dt1$PAR))==trimws("NaN")),NA,dt1$PAR)
dt1$flag <- as.factor(ifelse((trimws(as.character(dt1$flag))==trimws("NaN")),NA,as.character(dt1$flag)))
dt1$comments <- as.factor(ifelse((trimws(as.character(dt1$comments))==trimws("NaN")),NA,as.character(dt1$comments)))
# Here is the structure of the input data frame:
str(dt1)
attach(dt1)
View(dt1)
summary(chl_a)
detach(dt1)
#------
ggplot(dt1, aes(date, chl_a))+
geom_point()+
geom_line()
#------
ggplot(dt1, aes(date, chl_a))+
geom_point()
#------
#create average chl-a column
dt1 <- dt1 %>%
group_by(date, local_site) %>%
mutate(avg_chl = mean(chl_a)) %>%
ungroup()
ggplot(dt1, aes(date, avg_chl))+
geom_point()+
geom_line()
unique(dt1$local_site)
ggplot(dt1, aes(date, avg_chl, color= local_site))+
geom_point()+
geom_line()
ggplot(dt1, aes(date, chl_a, color= local_site))+
geom_point()+
geom_line()
ggplot(dt1, aes(date, chl_a, color= local_site))+
geom_point()
#violin plot?
ggplot(data= dt1, aes(x= date, chl_a))+
geom_violin()
#violin plot?
ggplot(data= dt1, aes(x= date, chl_a, group= year))+
geom_violin()
#violin plot?
ggplot(data= dt1, aes(x= year, chl_a))+
geom_violin()+
stat_summary(fun.y=median, geom="point", size=2, color="red") +
geom_hline(yintercept=0, linetype="dashed", color = "red",alpha=0.5)
#violin plot?
ggplot(data= dt1, aes(x= year, chl_a))+
geom_violin(aes(group= year))+
stat_summary(fun.y=median, geom="point", size=2, color="red") +
geom_hline(yintercept=0, linetype="dashed", color = "red",alpha=0.5)
#violin plot?
ggplot(data= dt1, aes(x= year, chl_a))+
geom_bar(aes(group= year))+
stat_summary(fun.y=median, geom="point", size=2, color="red") +
geom_hline(yintercept=0, linetype="dashed", color = "red",alpha=0.5)
#violin plot?
ggplot(data= dt1, aes(x= year, y=chl_a))+
geom_bar(aes(group= year))+
stat_summary(fun.y=median, geom="point", size=2, color="red") +
geom_hline(yintercept=0, linetype="dashed", color = "red",alpha=0.5)
#violin plot?
ggplot(data= dt1, aes(x= year, y=chl_a))+
geom_bar(aes(group= year))
#violin plot?
ggplot(data= dt1, aes(x= year, y=chl_a))+
geom_violin(aes(group= year))+
stat_summary(fun.y=median, geom="point", size=2, color="red") +
geom_hline(yintercept=0, linetype="dashed", color = "red",alpha=0.5)
#bring in field data from Bella
library(readxl)
field <- read_excel("Documents/GitHub/NASA_DEVELOP_CO19/Data/field/AgregateWaterColumn_datefixed.xlsx")
View(field)
library(lubridate)
field <- field %>%
mutate(year= year(date_sampled))
ggplot()+
geom_point(data = dt1, aes(x= year, y= avg_chl))+
geom_point(data= field, aes(x= year, y= average_chla))
ggplot()+
geom_point(data = dt1, aes(x= year, y= avg_chl))+
geom_point(data= field, aes(x= year, y= average_chla))+
geom_smooth(method = "lm")
ggplot()+
geom_point(data = dt1, aes(x= year, y= avg_chl))+
geom_point(data= field, aes(x= year, y= average_chla))+
geom_abline(method = "lm")
unique(dt1$year)
#------
#create average chl-a column
dt1 <- dt1 %>%
group_by(date, local_site) %>%
mutate(avg_chl = mean(chl_a, na.omit())) %>%
ungroup()
#------
#create average chl-a column
dt1 <- dt1 %>%
group_by(date, local_site) %>%
mutate(avg_chl = mean(chl_a, na.rm = TRUE)) %>%
ungroup()
ggplot(dt1, aes(date, avg_chl, color= local_site))+
geom_point()+
geom_line()
ggplot()+
geom_point(data = dt1, aes(x= year, y= avg_chl))+
geom_point(data= field, aes(x= year, y= average_chla))+
geom_abline(method = "lm")
#violin plot?
ggplot(data= dt1, aes(x= year, y=chl_a))+
geom_violin(aes(group= year))+
stat_summary(fun.y=median, geom="point", size=2, color="red") +
geom_hline(yintercept=0, linetype="dashed", color = "red",alpha=0.5)
ggplot()+
geom_point(data = dt1, aes(x= year, y= avg_chl))+
geom_point(data= field, aes(x= year, y= average_chla))+
geom_abline(method = "lm")
ggplot()+
geom_point(data = dt1, aes(x= year, y= avg_chl))+
geom_point(data= field, aes(x= year, y= average_chla))+
geom_smooth(method  = "lm")
#need date_samples, year, site id, average_chla
join.f <- field %>%
select(date_sampled, year, site_ID, average_chla)
join.l <- dt1 %>%
select(date, year, local_site, avg_chl)
join.l <- dt1 %>%
select(date, year, local_site, avg_chl) %>%
rename(average_chla= avg_chl,
date= date_sampled,
local_site= site_ID)
View(join.l)
join.l <- dt1 %>%
select(date, year, local_site, avg_chl) %>%
rename(average_chla= "avg_chl",
date= "date_sampled",
local_site= "site_ID")
join.l <- dt1 %>%
select(date, year, local_site, avg_chl) %>%
rename(average_chla= avg_chl,
date= date_sampled,
local_site= site_ID)
join.l <- dt1 %>%
select(date, year, local_site, avg_chl) %>%
rename(average_chla= avg_chl,
date_sampled= date,
site_ID= local_site)
#rbind
rbind(join.f, join.l)
View(join.f)
#rbind
all.chl <- rbind(join.f, join.l)
View(all.chl)
View(all.chl)
ggplot(data= all.chl, aes(x= year, y= average_chla))+
geom_point()+
geom_smooth(method = "lm")
ggplot(data= all.chl, aes(x= year, y=average_chla))+
geom_violin(aes(group= year))+
stat_summary(fun.y=median, geom="point", size=2, color="red") +
geom_hline(yintercept=0, linetype="dashed", color = "red",alpha=0.5)
ggplot(data= all.chl, aes(x= average_chla))+
geom_histogram()
ggplot(data= all.chl, aes(x= log(average_chla)))+
geom_histogram()
ggplot(data= all.chl, aes(x= year, y=log(average_chla)))+
geom_violin(aes(group= year))+
stat_summary(fun.y=median, geom="point", size=2, color="red") +
geom_hline(yintercept=0, linetype="dashed", color = "red",alpha=0.5)
#plots
#log transform????
ggplot(data= all.chl, aes(x= (average_chla))+
#plots
#log transform????
ggplot(data= all.chl, aes(x= (average_chla)))+
geom_histogram()
#plots
#log transform????
ggplot(data= all.chl, aes(x= average_chla))+
geom_histogram()
ggplot(data= all.chl, aes(x= year, y= log(average_chla)))+
geom_point()+
geom_smooth(method = "lm")
ggplot(data= all.chl, aes(x= year, y=average_chla))+
geom_violin(aes(group= year))+
stat_summary(fun.y=median, geom="point", size=2, color="red") +
geom_hline(yintercept=0, linetype="dashed", color = "red",alpha=0.5)
ggplot(data= all.chl, aes(x= year, y= (average_chla)))+
geom_point()+
geom_smooth(method = "lm")
expression(paste("Chl-a (", mu, "g/L")
ggplot(data= all.chl, aes(x= year, y= average_chla))+
geom_point()+
geom_smooth(method = "lm")+
theme_classic()+
labs(x= "Year",
y= expression(paste("Chl-a (", mu, "g/L")))
ggplot(data= all.chl, aes(x= year, y= average_chla))+
geom_point()+
geom_smooth(method = "lm")+
theme_classic()+
labs(x= "Year",
y= expression(paste("Chl-a (", mu, "g/L)")))
ggplot(data= all.chl, aes(x= year, y= average_chla))+
geom_point()+
geom_smooth(method = "lm", se= FALS)+
theme_classic()+
labs(x= "Year",
y= expression(paste("Chl-a (", mu, "g/L)")))
ggplot(data= all.chl, aes(x= year, y= average_chla))+
geom_point()+
geom_smooth(method = "lm", se= FALSE)+
theme_classic()+
labs(x= "Year",
y= expression(paste("Chl-a (", mu, "g/L)")))
ggplot(data= all.chl, aes(x= date_sampled, y= average_chla))+
geom_point()+
geom_smooth(method = "lm", se= FALSE)+
theme_classic()+
labs(x= "Date",
y= expression(paste("Chl-a (", mu, "g/L)")))
ggplot(data= all.chl, aes(x= year, y=average_chla))+
geom_violin(aes(group= year))+
stat_summary(fun.y=median, geom="point", size=2, color="red") +
geom_hline(yintercept=0, linetype="dashed", color = "red",alpha=0.5)+
labs(x= "Date",
y= expression(paste("Chl-a (", mu, "g/L)")))
ggplot(data= all.chl, aes(x= date_sampled, y=average_chla))+
geom_violin(aes(group= year))+
stat_summary(fun.y=median, geom="point", size=2, color="red") +
geom_hline(yintercept=0, linetype="dashed", color = "red",alpha=0.5)+
labs(x= "Date",
y= expression(paste("Chl-a (", mu, "g/L)")))
ggplot(data= all.chl, aes(x= year, y=average_chla))+
geom_violin(aes(group= year))+
stat_summary(fun.y=median, geom="point", size=2, color="red") +
geom_hline(yintercept=0, linetype="dashed", color = "red",alpha=0.5)+
labs(x= "Date",
y= expression(paste("Chl-a (", mu, "g/L)")))
#violin
ggplot(data= all.chl, aes(x= year, y=average_chla))+
geom_violin(aes(group= year))+
stat_summary(fun.y=median, geom="point", size=2, color="red") +
geom_hline(yintercept=0, linetype="dashed", color = "red",alpha=0.5)+
theme_classic()+
labs(x= "Date",
y= expression(paste("Chl-a (", mu, "g/L)")))
#violin
ggplot(data= all.chl, aes(x= year, y=average_chla))+
geom_violin(aes(group= year))+
stat_summary(fun.y=median, geom="point", size=2, color="red") +
geom_hline(color = "red",alpha=0.5)+
theme_classic()+
labs(x= "Date",
y= expression(paste("Chl-a (", mu, "g/L)")))
#violin
ggplot(data= all.chl, aes(x= year, y=average_chla))+
geom_violin(aes(group= year))+
stat_summary(fun.y=median, geom="point", size=2, color="red") +
theme_classic()+
labs(x= "Date",
y= expression(paste("Chl-a (", mu, "g/L)")))
#scatter w trendline
ggplot(data= all.chl, aes(x= date_sampled, y= average_chla))+
geom_point()+
geom_smooth(method = "lm", se= FALSE)+
theme_classic()+
labs(x= "Date",
y= expression(paste("Chl-a (", mu, "g/L)")))
#scatter w trendline
ggplot(data= all.chl, aes(x= date_sampled, y= average_chla))+
geom_point()+
geom_smooth(method = "lm", se= FALSE, color= "red")+
theme_classic()+
labs(x= "Date",
y= expression(paste("Chl-a (", mu, "g/L)")))
#violin
ggplot(data= all.chl, aes(x= year, y=average_chla))+
geom_violin(aes(group= year))+
stat_summary(fun.y=median, geom="point", size=2, color="red") +
theme_classic()+
labs(x= "Date",
y= expression(paste("Chl-a (", mu, "g/L)")))
setwd("/Users/natalieschmer/Documents/GitHub/wr674")
